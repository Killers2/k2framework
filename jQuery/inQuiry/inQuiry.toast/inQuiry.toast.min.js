/*!
 * PLUGIN inQuiry uiToast  V1.2
 * @laguage: Javascript ES6
 * @Inspired by: https://github.com/WebDevSimplified/live-toast-notification-library/blob/main/Toast.js
 * @author: Tony N. Hyde (Date: 23 January 2022)
 * @Dependencies: JQuery, inQuiry.Extentions.js
 */
!function($){"use strict";class uiToast{toastElem;autoCloseInterval;progressInterval;removeBinded;timeVisible=0;isPaused=!1;unpause;pause;visibilityChange;shouldUnPause;autoCloseFrame;constructor(options){this.toastElem=document.createElement("div"),this.toastElem.classList.add("toast"),requestAnimationFrame(()=>{this.toastElem.classList.add("show")}),this.removeBinded=this.remove.bind(this),this.unpause=()=>this.isPaused=!1,this.pause=()=>this.isPaused=!0,this.visibilityChange=()=>{this.shouldUnPause="visible"===document.visibilityState},Object.entries(options).forEach(([key,value])=>{this[key]=value})}set autoClose(value){if(this.autoCloseFrame=value,this.timeVisible=0,!1===value)return;let lastTime;const func=time=>{if(this.shouldUnPause&&(lastTime=null,this.shouldUnPause=!1),null==lastTime)return lastTime=time,void(this.autoCloseInterval=requestAnimationFrame(func));!this.isPaused&&(this.timeVisible+=time-lastTime,this.timeVisible>=this.autoCloseFrame)?this.remove():(lastTime=time,this.autoCloseInterval=requestAnimationFrame(func))};this.autoCloseInterval=requestAnimationFrame(func)}set position(value){const currentContainer=this.toastElem.parentElement,selector=`.toast-container[data-position="${value}"]`,container=document.querySelector(selector)||this.createContainer(value);container.append(this.toastElem),null==currentContainer||currentContainer.hasChildNodes()||currentContainer.remove()}set text(value){this.toastElem.textContent=value}set canClose(value){this.toastElem.classList.toggle("can-close",value),value?this.toastElem.addEventListener("click",this.removeBinded):this.toastElem.removeEventListener("click",this.removeBinded)}set showProgress(value){if(this.toastElem.classList.toggle("progress",value),this.toastElem.style.setProperty("--progress",1),value){const func=()=>{this.isPaused||this.toastElem.style.setProperty("--progress",1-this.timeVisible/this.autoCloseFrame),this.progressInterval=requestAnimationFrame(func)};this.progressInterval=requestAnimationFrame(func)}}set pauseOnHover(value){value?(this.toastElem.addEventListener("mouseover",this.pause),this.toastElem.addEventListener("mouseleave",this.unpause)):(this.toastElem.removeEventListener("mouseover",this.pause),this.toastElem.removeEventListener("mouseleave",this.unpause))}set pauseOnFocusLoss(value){value?document.addEventListener("visibilitychange",this.visibilityChange):document.removeEventListener("visibilitychange",this.visibilityChange)}remove(){cancelAnimationFrame(this.autoCloseInterval),cancelAnimationFrame(this.progressInterval);const container=this.toastElem.parentElement;this.toastElem.classList.remove("show"),this.toastElem.addEventListener("transitionend",()=>{this.toastElem.remove(),container.hasChildNodes()||container.remove()}),this.onClose()}createContainer=function(position){const container=document.createElement("div");return container.classList.add("toast-container"),container.dataset.position=position,document.body.append(container),container}}$.uiToast=function(options){const toast=new uiToast($.extend({},{text:"Hello World!",position:"top-right",showProgress:!1,pauseOnHover:!1,pauseOnFocusLoss:!1,canClose:!0,autoClose:!1,onClose:()=>{}},options))}}(jQuery);